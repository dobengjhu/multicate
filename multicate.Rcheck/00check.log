* using log directory ‘/Users/danielobeng/code/multicate/multicate.Rcheck’
* using R version 4.4.2 (2024-10-31)
* using platform: aarch64-apple-darwin20
* R was compiled by
    Apple clang version 14.0.0 (clang-1400.0.29.202)
    GNU Fortran (GCC) 12.2.0
* running under: macOS Sonoma 14.6.1
* using session charset: UTF-8
* using options ‘--no-manual --as-cran’
* checking for file ‘multicate/DESCRIPTION’ ... OK
* this is package ‘multicate’ version ‘0.0.0.9000’
* package encoding: UTF-8
* checking package namespace information ... OK
* checking package dependencies ... OK
* checking if this is a source package ... OK
* checking if there is a namespace ... OK
* checking for executable files ... OK
* checking for hidden files and directories ... OK
* checking for portable file names ... OK
* checking for sufficient/correct file permissions ... OK
* checking whether package ‘multicate’ can be installed ... OK
* checking installed package size ... OK
* checking package directory ... OK
* checking for future file timestamps ... OK
* checking DESCRIPTION meta-information ... OK
* checking top-level files ... OK
* checking for left-over files ... OK
* checking index information ... OK
* checking package subdirectories ... OK
* checking code files for non-ASCII characters ... OK
* checking R files for syntax errors ... OK
* checking whether the package can be loaded ... OK
* checking whether the package can be loaded with stated dependencies ... OK
* checking whether the package can be unloaded cleanly ... OK
* checking whether the namespace can be loaded with stated dependencies ... OK
* checking whether the namespace can be unloaded cleanly ... OK
* checking loading without being on the library search path ... OK
* checking dependencies in R code ... NOTE
Unexported objects imported by ':::' calls:
  ‘dbarts:::predict.bart’ ‘grf:::predict.causal_forest’
  See the note in ?`:::` about the use of this operator.
* checking S3 generic/method consistency ... WARNING
predict:
  function(object, ...)
predict.cate:
  function(cate_obj, newdata_tbl, alpha)

plot:
  function(x, ...)
plot.cate:
  function(x, which_plot, ask)
See section ‘Generic functions and methods’ in the ‘Writing R
Extensions’ manual.
* checking replacement functions ... OK
* checking foreign function calls ... OK
* checking R code for possible problems ... NOTE
plot.cate: no visible binding for global variable ‘tau_hat’
predict.cate: no visible binding for global variable ‘.’
predict.cate: no visible binding for global variable ‘var_within’
predict.cate: no visible binding for global variable ‘var_between’
predict.cate: no visible binding for global variable ‘var_tot’
predict.cate: no visible binding for global variable
  ‘mean_tau_predicted’
predict.cate: no visible binding for global variable ‘n_K’
predict.cate: no visible binding for global variable ‘sig’
prepare_cate_data: no visible binding for global variable ‘.’
Undefined global functions or variables:
  . mean_tau_predicted n_K sig tau_hat var_between var_tot var_within
* checking Rd files ... OK
* checking Rd metadata ... OK
* checking Rd line widths ... OK
* checking Rd cross-references ... OK
* checking for missing documentation entries ... OK
* checking for code/documentation mismatches ... OK
* checking Rd \usage sections ... OK
* checking Rd contents ... OK
* checking for unstated dependencies in examples ... OK
* checking contents of ‘data’ directory ... OK
* checking data for non-ASCII characters ... OK
* checking LazyData ... OK
* checking data for ASCII and uncompressed saves ... OK
* checking examples ... OK
* checking for unstated dependencies in ‘tests’ ... OK
* checking tests ... [51s/34s] OK
  Running ‘testthat.R’ [51s/34s]
* checking for non-standard things in the check directory ... OK
* checking for detritus in the temp directory ... OK
* DONE
Status: 1 WARNING, 2 NOTEs
